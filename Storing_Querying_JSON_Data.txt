Drop table purchase_order purge;

--creating a table with JSON data type in Oracle 21c
CREATE TABLE purchase_order
  (id          VARCHAR2 (32) NOT NULL PRIMARY KEY,
   date_loaded TIMESTAMP (6) WITH TIME ZONE,
   po_document JSON);

--creating a table with Varchar2 data type with a JSON check constraints
CREATE TABLE purchase_order
  (id          VARCHAR2 (32) NOT NULL PRIMARY KEY,
   date_loaded TIMESTAMP (6) WITH TIME ZONE,
   po_document VARCHAR2 (4000)       ---This supports upto 32767 characters per row when the "max_string_size" system parameter is defined as extended.
   CONSTRAINT ensure_json CHECK (po_document is json));
   
--inserting data

INSERT INTO purchase_order
  VALUES (
    SYS_GUID(),
    trunc(sysdate),
    '{"PONumber"             : 1600,
      "Reference"            : "ABULL-20140421",
      "Requestor"            : "Alexis Bull",
      "User"                 : "ABULL",
      "CostCenter"           : "A50",
      "ShippingInstructions" :
        {"name"    : "Alexis Bull",
         "Address" : {"street"  : "200 Sporting Green",
                      "city"    : "South San Francisco",
                      "state"   : "CA",
                      "zipCode" : 99236,
                      "country" : "United States of America"},
         "Phone"   : [{"type" : "Office", "number" : "909-555-7307"},
                      {"type" : "Mobile", "number" : "415-555-1234"}]},
      "Special Instructions" : null,
      "AllowPartialShipment" : true,
      "LineItems"            :
        [{"ItemNumber" : 1,
          "Part"       : {"Description" : "One Magic Christmas",
                          "UnitPrice"   : 19.95,
                          "UPCCode"     : 13131092899},
          "Quantity"   : 9.0},
         {"ItemNumber" : 2,
          "Part"       : {"Description" : "Lethal Weapon",
                          "UnitPrice"   : 19.95,
                          "UPCCode"     : 85391628927},
          "Quantity"   : 5.0}]}');

INSERT INTO purchase_order
  VALUES (
    SYS_GUID(),
    trunc(sysdate),
    '{"PONumber"             : 672,
      "Reference"            : "SBELL-20141017",
      "Requestor"            : "Sarah Bell",
      "User"                 : "SBELL",
      "CostCenter"           : "A50",
      "ShippingInstructions" : {"name"    : "Sarah Bell",
                                "Address" : {"street"  : "200 Sporting Green",
                                             "city"    : "South San Francisco",
                                             "state"   : "CA",
                                             "zipCode" : 99236,
                                             "country" : "United States of America"},
                                "Phone"   : "983-555-6509"},
      "Special Instructions" : "Courier",
      "LineItems"            :
        [{"ItemNumber" : 1,
          "Part"       : {"Description" : "Making the Grade",
                          "UnitPrice"   : 20,
                          "UPCCode"     : 27616867759},
          "Quantity"   : 8.0},
         {"ItemNumber" : 2,
          "Part"       : {"Description" : "Nixon",
                          "UnitPrice"   : 19.95,
                          "UPCCode"     : 717951002396},
          "Quantity"   : 5},
         {"ItemNumber" : 3,
          "Part"       : {"Description" : "Eric Clapton: Best Of 1981-1999",
                          "UnitPrice"   : 19.95,
                          "UPCCode"     : 75993851120},
          "Quantity"   : 5.0}]}');




--creating a table with Varchar2 data type with a JSON check constraints
CREATE TABLE purchase_order
  (id          VARCHAR2 (32) NOT NULL PRIMARY KEY,
   date_loaded TIMESTAMP (6) WITH TIME ZONE,
   po_document CLOB
   CONSTRAINT ensure_json CHECK (po_document is json));
   
   
select to_char( po_document ) from purchase_order;

select po.po_document.ponumber
  from purchase_order po;

select po.po_document.lineitems[0]
  from purchase_order po;

select po.po_document.lineitems[1]
  from purchase_order po;

select po.po_document.lineitems[1].part
  from purchase_order po;

select po.po_document.lineitems[1].part.unitprice
  from purchase_order po;

select to_char( po.po_document )
  from purchase_order po
 where json_exists( po.po_document, '$.LineItems.Part?(@.UPCCode == $v1)' passing '85391628927' as "v1" );

select json_query( po.po_document, '$' ) as value
  from purchase_order po;

select json_query( po.po_document, '$.PONumber' with wrapper ) as value
  from purchase_order po;

select json_query( po.po_document, '$.ShippingInstructions' with wrapper ) as value
  from purchase_order po;

select json_query( po.po_document, '$[*].stringOnly()' with wrapper ) as value
  from purchase_order po;

select json_query( '["alpha", 42, "10.4"]', '$[*].stringOnly()' with array wrapper ) from dual;

select json_value( '[19, "Oracle", {"a":1},[1,2,3]]', '$.type()' ) from dual;

select json_value( po_document, '$.LineItems[*].Quantity.avg()' ) from purchase_order;

select avg( json_value( po_document, '$.LineItems[*].Quantity.avg()' ) ) from purchase_order;